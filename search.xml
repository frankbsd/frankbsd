<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>保持fork之后的项目和上游同步</title>
    <url>/2024/07/31/%E4%BF%9D%E6%8C%81fork%E4%B9%8B%E5%90%8E%E7%9A%84%E9%A1%B9%E7%9B%AE%E5%92%8C%E4%B8%8A%E6%B8%B8%E5%90%8C%E6%AD%A5/</url>
    <content><![CDATA[<ol>
<li><p>在github上fork原项目</p>
</li>
<li><p>从自己仓库clone到本地</p>
</li>
<li><p>查看当前仓库远程地址</p>
 <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PS</span> C:\Users\FRANK\Desktop\Alipay.AopSdk.Core&gt; git remote <span class="literal">-v</span></span><br><span class="line">origin  https://github.com/frankbsd/Alipay.AopSdk.Core.git (fetch)</span><br><span class="line">origin  https://github.com/frankbsd/Alipay.AopSdk.Core.git (push)</span><br></pre></td></tr></table></figure>
</li>
<li><p>添加别名<code>upstream</code>的上游地址，指向之前fork的原仓库地址</p>
 <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PS</span> C:\Users\FRANK\Desktop\Alipay.AopSdk.Core&gt; git remote add upstream https://github.com/dotnetcore/    Alipay.AopSdk.Core.git</span><br><span class="line"><span class="built_in">PS</span> C:\Users\FRANK\Desktop\Alipay.AopSdk.Core&gt; git remote <span class="literal">-v</span></span><br><span class="line">origin  https://github.com/frankbsd/Alipay.AopSdk.Core.git (fetch)</span><br><span class="line">origin  https://github.com/frankbsd/Alipay.AopSdk.Core.git (push)</span><br><span class="line">upstream        https://github.com/dotnetcore/Alipay.AopSdk.Core.git (fetch)</span><br><span class="line">upstream        https://github.com/dotnetcore/Alipay.AopSdk.Core.git (push)</span><br></pre></td></tr></table></figure>
</li>
<li><p>使自己远程仓库与原仓库保持同步</p>
 <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PS</span> C:\Users\FRANK\Desktop\Alipay.AopSdk.Core&gt; git fetch upstream</span><br><span class="line">From https://github.com/dotnetcore/Alipay.AopSdk.Core</span><br><span class="line"> * [<span class="type">new</span> <span class="type">branch</span>]      dev        -&gt; upstream/dev</span><br><span class="line"> * [<span class="type">new</span> <span class="type">branch</span>]      master     -&gt; upstream/master</span><br><span class="line"><span class="built_in">PS</span> C:\Users\FRANK\Desktop\Alipay.AopSdk.Core&gt; git checkout master</span><br><span class="line">Already on <span class="string">&#x27;master&#x27;</span></span><br><span class="line">Your branch is up to date with <span class="string">&#x27;origin/master&#x27;</span>.</span><br><span class="line"><span class="built_in">PS</span> C:\Users\FRANK\Desktop\Alipay.AopSdk.Core&gt; git merge upstream/master</span><br><span class="line">Already up to date.</span><br><span class="line"><span class="built_in">PS</span> C:\Users\FRANK\Desktop\Alipay.AopSdk.Core&gt; git push origin master</span><br><span class="line">fatal: NotSupportedException encountered.</span><br><span class="line">   ServicePointManager 不支持具有 socks5 方案的代理。</span><br><span class="line">fatal: NotSupportedException encountered.</span><br><span class="line">   ServicePointManager 不支持具有 socks5 方案的代理。</span><br><span class="line">Username <span class="keyword">for</span> <span class="string">&#x27;https://github.com&#x27;</span>: frankbsd</span><br><span class="line">Password <span class="keyword">for</span> <span class="string">&#x27;https://frankbsd@github.com&#x27;</span>:</span><br><span class="line">Everything up<span class="literal">-to-date</span></span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>表驱动法编程--数据驱动</title>
    <url>/2024/07/31/%E8%A1%A8%E9%A9%B1%E5%8A%A8%E6%B3%95%E7%BC%96%E7%A8%8B-%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8/</url>
    <content><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p><strong>表驱动方法（Table-Driven Methods）</strong>，在《Unix 编程艺术》中有提到，《代码大全》的第十八章对此进行了详细地讲解。</p>
<p>表驱动法是一种从表里查找信息而不是使用逻辑语句（<code>if</code>或<code>switch</code>）的编程模型。</p>
<h2 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h2><p>先通过一个简单的例子体验下，在某些情况下，如果不使用表驱动方法，代码会如何地难看。</p>
<p>假设让你实现一个返回每个月天数的函数（为简单起见不考虑闰年）。</p>
<p>初级码农的笨方法是马上摆出 12 副威武雄壮的 <code>if-else</code> 组合拳：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">iGetMonthDays</span>(<span class="params"><span class="built_in">int</span> iMonth</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> iDays;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="number">1</span> == iMonth) &#123;iDays = <span class="number">31</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">2</span> == iMonth) &#123;iDays = <span class="number">28</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">3</span> == iMonth) &#123;iDays = <span class="number">31</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">4</span> == iMonth) &#123;iDays = <span class="number">30</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">5</span> == iMonth) &#123;iDays = <span class="number">31</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">6</span> == iMonth) &#123;iDays = <span class="number">30</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">7</span> == iMonth) &#123;iDays = <span class="number">31</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">8</span> == iMonth) &#123;iDays = <span class="number">31</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">9</span> == iMonth) &#123;iDays = <span class="number">30</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">10</span> == iMonth) &#123;iDays = <span class="number">31</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">11</span> == iMonth) &#123;iDays = <span class="number">30</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">12</span> == iMonth) &#123;iDays = <span class="number">31</span>;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> iDays;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>稍微机灵点的码农发现每月天数无外乎 28、30、31 三种，或许会用 <code>switch-case</code> “裁剪”下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">iGetMonthDays</span>(<span class="params"><span class="built_in">int</span> iMonth</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> iDays;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">switch</span> (iMonth) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">12</span>:&#123;iDays = <span class="number">31</span>;<span class="keyword">break</span>;&#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:&#123;iDays = <span class="number">28</span>;<span class="keyword">break</span>;&#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">11</span>:&#123;iDays = <span class="number">30</span>;<span class="keyword">break</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> iDays;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这两种方法充斥了大量的逻辑判断，还凭空冒出了一大堆<code>1，2，…，11，12</code>这样的 <code>Magic Number</code>（魔鬼数字公然出现在程序里是很 ugly 的做法），不利于代码的维护与扩展。</p>
<p>表驱动处理起来就赏心悦目得多了：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">    <span class="keyword">static</span> <span class="built_in">int</span> monthDays[<span class="number">12</span>] = &#123;<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line">    <span class="function"><span class="built_in">int</span> <span class="title">iGetMonthDays</span>(<span class="params"><span class="built_in">int</span> iMonth</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> monthDays[(iMonth - <span class="number">1</span>)];</span><br><span class="line">    &#125;</span><br><span class="line">```  </span><br><span class="line">  </span><br><span class="line"><span class="meta">## How</span></span><br><span class="line"></span><br><span class="line">表驱动可以使你的代码更简洁，结构更加灵活，多用于逻辑性不强但是分支多的情况。</span><br><span class="line">  </span><br><span class="line"><span class="meta">### 如何使用表驱动法?</span></span><br><span class="line"></span><br><span class="line">需要明确两个关键问题：表的形式及表中放什么内容</span><br><span class="line">  </span><br><span class="line">- 表形式可以为一维数组、二维数组和结构体数组。</span><br><span class="line">- 表中可以存放数值、字符串或函数指针等数据。</span><br><span class="line">  </span><br><span class="line"><span class="meta">### 如何去访问表?</span></span><br><span class="line">下面介绍表的三种访问方式：</span><br><span class="line"></span><br><span class="line">- 直接访问</span><br><span class="line"></span><br><span class="line">  直接根据“键”来获得“值”，给定下标 index，然后array[index]就获得数组在相应下标处的数值。例如前面这个根据月份取天数的例子。</span><br><span class="line"></span><br><span class="line">  ![Key-Value](key-<span class="keyword">value</span>.png)</span><br><span class="line"></span><br><span class="line">- 索引访问</span><br><span class="line"></span><br><span class="line">  ![索引访问](index.png)</span><br><span class="line"></span><br><span class="line">它适用于这样的情况：假设你经营一家商店，有 <span class="number">100</span> 种商品，每种商品都有一个 ID 号，但很多商品的描述都差不多，所以只有 <span class="number">30</span> 条不同的描述，如何建立建立商品与商品描述的表？</span><br><span class="line">还是同上面做法来一一对应吗？那样描述会扩充到 <span class="number">100</span> 个，会有 <span class="number">70</span> 个描述是重复的！太浪费了。</span><br><span class="line">方法是建立一个 <span class="number">100</span> 长的索引和 <span class="number">30</span> 长的描述，然后这些索引指向相应的描述（不同的索引可以指向相同的描述），这样就解决了表数据冗余的问题啦。</span><br><span class="line"></span><br><span class="line">```cpp</span><br><span class="line">    <span class="keyword">struct</span> product_t &#123;</span><br><span class="line">        <span class="built_in">char</span> * id;</span><br><span class="line">        <span class="built_in">int</span> desc_index;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">const</span> <span class="built_in">char</span> * desc[] = &#123;</span><br><span class="line">        <span class="string">&quot;description_1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;description_2&quot;</span>,</span><br><span class="line">        ...</span><br><span class="line">        <span class="string">&quot;description_29&quot;</span>,</span><br><span class="line">        <span class="string">&quot;description_30&quot;</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">const</span> product_t goods [] = &#123;</span><br><span class="line">        &#123;<span class="string">&quot;id_1&quot;</span>, <span class="number">3</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;id_2&quot;</span>, <span class="number">1</span>&#125;,</span><br><span class="line">        ...</span><br><span class="line">        &#123;<span class="string">&quot;id_99&quot;</span>, <span class="number">12</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;id_100&quot;</span>, <span class="number">5</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">const</span> <span class="built_in">char</span>* desc_product (<span class="keyword">const</span> <span class="built_in">char</span>* id) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> product_t &amp; p : goods) &#123;</span><br><span class="line">            <span class="keyword">if</span> (strcmp(p.id, id) == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> desc[p.desc_index - <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> NULL;</span><br><span class="line">    &#125;</span><br><span class="line">```  </span><br><span class="line">  </span><br><span class="line">- 阶梯访问</span><br><span class="line"></span><br><span class="line">  |范围上限|范围下限|值|</span><br><span class="line">  |---|---|---|</span><br><span class="line">  |<span class="number">100</span>|<span class="number">90</span>|A|</span><br><span class="line">  |<span class="number">90</span>|<span class="number">80</span>|B|</span><br><span class="line">  |<span class="number">80</span>|<span class="number">70</span>|C|</span><br><span class="line">  |…|…|…|</span><br><span class="line"></span><br><span class="line">  例子：将百分制成绩转成五级分制（我们用的优、良、中、合格、不合格，西方用的 A、B、C、D和F），假定转换关系:</span><br><span class="line"></span><br><span class="line">  |Score|值|</span><br><span class="line">  |---|---|</span><br><span class="line">  |[<span class="number">90</span>,<span class="number">100</span>] |A|</span><br><span class="line">  |[<span class="number">80</span>,<span class="number">90</span>) |B|</span><br><span class="line">  |[<span class="number">70</span>,<span class="number">80</span>) |C|</span><br><span class="line">  |[<span class="number">60</span>,<span class="number">70</span>) |D|</span><br><span class="line">  |[<span class="number">0</span>,<span class="number">60</span>) |E|</span><br><span class="line">  </span><br><span class="line">  如何用表格表示这些范围？</span><br><span class="line"></span><br><span class="line">  你当然可以用第一种直接访问的方法：申请一个 <span class="number">100</span> 长的表，然后在这个表中填充相应的等级。很明显，也会浪费大量空间，有没有更好的方法？</span><br><span class="line"></span><br><span class="line">  对于这种“某个范围区间内，对应某个值”的逻辑规则，可用阶梯访问的方式。</span><br><span class="line"></span><br><span class="line">  ```cpp</span><br><span class="line">      <span class="keyword">const</span> <span class="built_in">char</span> gradeTable[] = &#123;</span><br><span class="line">          <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;F&#x27;</span></span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="keyword">const</span> <span class="built_in">int</span> downLimit[] = &#123;</span><br><span class="line">          <span class="number">90</span>, <span class="number">80</span>, <span class="number">70</span>, <span class="number">60</span></span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="function"><span class="built_in">int</span> <span class="title">degree</span>(<span class="params"><span class="built_in">int</span> score</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">          <span class="built_in">int</span> gradeLevel = <span class="number">0</span>;</span><br><span class="line">          <span class="built_in">char</span> lowestDegree = gradeTable[<span class="keyword">sizeof</span>(gradeTable)/<span class="keyword">sizeof</span>(gradeTable[<span class="number">0</span>]) - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">          <span class="comment">// 这里可用二分查找优化</span></span><br><span class="line">          <span class="keyword">while</span> (gradeTable[gradeLevel] != lowestDegree) &#123;</span><br><span class="line">              <span class="keyword">if</span>(score &lt; downLimit[gradeLevel]) &#123;</span><br><span class="line">                  ++ gradeLevel;</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  <span class="keyword">break</span>;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> gradeTable[gradeLevel];</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>

<p>  将来如果等级规则变了（比如 85～100 分为等级 A，或添加 50～60 分为等级 E），只需要修改 gradeTable 和 downLimit 表就行，degree 函数可以保持一行都不改动。</p>
<p>  更进一步地，gradeTable 和 downLimit 表还可以配置文件的形式表示，主程序从外部文件 load 进来就行，程序灵活性大大增加。</p>
<h2 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h2><p>  伟大的 C 语言大师 Rob Pike 有句话说的好：</p>
<blockquote>
<p>数据压倒一切。<br>如果选择了正确的数据结构并把一切组织的井井有条，正确的算法就不言自明。编程的核心是数据结构，而不是算法。</p>
</blockquote>
<p>  <em><strong>对人类来说，数据比编程逻辑更容易驾驭。在复杂数据和复杂代码中选择，宁可选择前者。</strong></em></p>
<p>  更进一步，在设计中，应该主动将代码的复杂度转移到数据中去。</p>
<p>  这里谈到了 Unix 哲学之分离原则：<strong>策略同机制分离</strong></p>
<ul>
<li>机制，即提供的功能。</li>
<li>策略，即如何使用功能。</li>
</ul>
<p>以百分制转五级分制为例，机制就是 degree 函数：你给一个百分制分数给它，它吐出来一个五级分制给你。策略就是gradeTable 和 downLimit 这两个表，它规定了哪个区间的分数对应哪个等级。<br>从 degree 的实现可以看出:对机制而言，策略是透明的（degree 完全看不到 gradeTable 和 downLimit 这两个表的内部规则）。<br>将两者分离，可以使机制(degree)相对保持稳定，而同时支持策略(表)的变化。</p>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>安装 Windows 11 22H2 时断网</title>
    <url>/2024/07/31/%E5%AE%89%E8%A3%85-Windows-11-22H2-%E6%97%B6%E6%96%AD%E7%BD%91/</url>
    <content><![CDATA[<p>在安装过程中联网那个地方 <code>Shift + F10</code>，输入 <code>oobe\BypassNRO.cmd</code> ，然后会重启就可以跳过了。</p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>PowerShell</tag>
      </tags>
  </entry>
  <entry>
    <title>Gradle 基本介绍</title>
    <url>/2024/08/03/Gradle-%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<p><img src="/2024/08/03/Gradle-%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/gradle-basic-1.png" alt="Gradle流程图"></p>
<ul>
<li><h2 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h2><table>
<thead>
<tr>
<th>指令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>gradle clean</td>
<td>清空当前项目下的build目录</td>
</tr>
<tr>
<td>gradle classes</td>
<td>编译业务代码和配置文件</td>
</tr>
<tr>
<td>gradle test</td>
<td>编译测试代码，生成测试报告</td>
</tr>
<tr>
<td>gradle build</td>
<td>构建项目</td>
</tr>
<tr>
<td>gradle build -x test</td>
<td>跳过测试构建项目</td>
</tr>
<tr>
<td>gradle run</td>
<td>运行一个服务，需要application插件支持，并且制定了主启动类才能运行</td>
</tr>
<tr>
<td>gradle init</td>
<td>初始化 gradle项目</td>
</tr>
<tr>
<td>gradle wrapper</td>
<td>生成 wrapper 文件夹</td>
</tr>
<tr>
<td>gradle projects</td>
<td>列出所有项目</td>
</tr>
<tr>
<td>gradle tasks</td>
<td>列出所选项目（当前项目，不包括父、子项目）的任务</td>
</tr>
<tr>
<td>gradle tasks –all</td>
<td>列出所选项目的所有任务</td>
</tr>
<tr>
<td>gradle tasks –group&#x3D;”build setup”</td>
<td>列出所选项目种指定分组中的任务</td>
</tr>
<tr>
<td>gradle help –task someTask</td>
<td>显示某个任务的详细信息</td>
</tr>
<tr>
<td>gradle dependencies</td>
<td>查看整个项目的依赖信息，以依赖树的方式显示</td>
</tr>
<tr>
<td>gradle properties</td>
<td>列出所选项目的属性列表</td>
</tr>
<tr>
<td>-S,–full-stacktrace</td>
<td>打印出所有异常的完整堆栈跟踪信息</td>
</tr>
<tr>
<td>-s,–stacktrace</td>
<td>打印出用户异常的堆栈跟踪</td>
</tr>
<tr>
<td>-Dorg.gradle.daemon.debug&#x3D;true</td>
<td>调试守护进程</td>
</tr>
<tr>
<td>-Dorg.gradle.debug&#x3D;true</td>
<td>调试客户端（非daemon）</td>
</tr>
<tr>
<td>-Dorg.gradle.debug.port&#x3D;9999</td>
<td>调试监听端口</td>
</tr>
<tr>
<td>gradle init –type pom</td>
<td>将Maven项目转换为 gradle项目(根目录执行)</td>
</tr>
</tbody></table>
</li>
<li><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><ul>
<li><h3 id="依赖的方式"><a href="#依赖的方式" class="headerlink" title="依赖的方式"></a>依赖的方式</h3><p><code>dependencies</code> 本质是<code>Project</code>接口定义的一个方法</p>
<ol>
<li>本地依赖。可通过 文件集合、文件树的方式指定</li>
<li>项目依赖</li>
<li>直接依赖 依赖类型.依赖的组名.名称.版本号</li>
</ol>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line"><span class="comment">//    implementation  files(&quot;example1.jar&quot;,&quot;example2.jar&quot;)</span></span><br><span class="line"><span class="comment">//    implementation  fileTree(&quot;dir&quot;:&quot;lib&quot;,includes: [&#x27;*.jar&#x27;],excludes: [&#x27;*.md&#x27;])</span></span><br><span class="line">    implementation project(<span class="string">&#x27;:subproject01&#x27;</span>) <span class="comment">// 一定要出现在 settings.gradle 中</span></span><br><span class="line">    implementation project(<span class="string">&#x27;subProject02&#x27;</span>)</span><br><span class="line">    implementation <span class="string">&#x27;org.apache.logging.log4j:log4j-spring-cloud-config-client:2.17.2&#x27;</span></span><br><span class="line">    implementation <span class="attr">group:</span> <span class="string">&#x27;org.springframework.boot&#x27;</span>, <span class="attr">name:</span> <span class="string">&#x27;spring-boot-starter-web&#x27;</span>, <span class="attr">version:</span> <span class="string">&#x27;3. 3.2&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h3 id="依赖类型"><a href="#依赖类型" class="headerlink" title="依赖类型"></a>依赖类型</h3><table>
<thead>
<tr>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>compileOnly</code></td>
<td>由Java插件提供，曾短暂的叫<code>provided</code>,后续版本已经改成了 <code>compileOnly</code>,适用于编译器需要，而     不需要打包的情况</td>
</tr>
<tr>
<td><code>runtimeOnly</code></td>
<td>由Java插件提供，只在运行期有效，编译时不需要，比如 mysql 驱动包，取代老版本的 <code>runtime</code></td>
</tr>
<tr>
<td><code>implementation</code></td>
<td>由Java插件提供，针对代码<code>src/main</code>目录，在编译、运行时都有效。取代老版本的 <code>compile</code></td>
</tr>
<tr>
<td><code>testCompileOnly</code></td>
<td>由Java插件提供，用于编译测试的依赖项，运行时不需要</td>
</tr>
<tr>
<td><code>testRuntimeOnly</code></td>
<td>由Java插件提供，只在运行测试时需要，而编译测试时不需要</td>
</tr>
<tr>
<td><code>testImplementation</code></td>
<td>由Java插件提供，针对测试代码<code>src/test</code>目录，在编译、运行时都有效。取代老版本的      <code>testCompile</code></td>
</tr>
<tr>
<td><code>providedCompile</code></td>
<td>war插件提供支持，编译、测试阶段代码需要此类依赖包，而在运行阶段容器已经提供了相应的支     持，所以无需将这些文件打入到<code>war</code>包中。 如 servlet-api.jar,jsp-api.jar</td>
</tr>
<tr>
<td><code>api</code></td>
<td>java-library插件提供支持，这些依赖项可以传递性地导出给使用者，用于编译时和运行时。取代老版本种被移      除的compile</td>
</tr>
<tr>
<td><code>compileOnlyApi</code></td>
<td>java-library插件提供支持，在声明模块和编译时需要的依赖项，在运行时不需要</td>
</tr>
</tbody></table>
<p>说明:使用<code>api</code>需要引入<code>java-library</code></p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">&#x27;java&#x27;</span></span><br><span class="line">    id <span class="string">&#x27;application&#x27;</span></span><br><span class="line">    id <span class="string">&#x27;java-library&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    api <span class="string">&#x27;xxxx&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>api</code>和<code>implementation</code>区别</p>
<table>
<thead>
<tr>
<th></th>
<th><code>api</code></th>
<th><code>implementation</code></th>
</tr>
</thead>
<tbody><tr>
<td>编译时</td>
<td>能进行依赖传递，底层变，全部都要变、编译速度较慢</td>
<td>不能进行依赖传递，底层变，不用全部都变，编译速度较   快</td>
</tr>
<tr>
<td>运行时</td>
<td>所有模块的<code>class</code>都要被加载</td>
<td>所有模块的<code>class</code>都要被加载</td>
</tr>
<tr>
<td>应用场景</td>
<td>适用于多模块依赖，避免重复依赖</td>
<td>多数情况下，使用<code>implementation</code></td>
</tr>
</tbody></table>
<h4 id="一些示例"><a href="#一些示例" class="headerlink" title="一些示例:"></a>一些示例:</h4>  <figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    <span class="comment">//implementation (group: &#x27;org.springframework.boot&#x27;, name: &#x27;spring-boot-starter-web&#x27;, version:       &#x27;3.3.2&#x27;)&#123;</span></span><br><span class="line">    <span class="comment">//    exclude group &#x27;&#x27;</span></span><br><span class="line">    <span class="comment">//    exclude module &#x27;&#x27;</span></span><br><span class="line">    <span class="comment">//    exclude group &#x27;&#x27; module &#x27;&#x27;</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line">    <span class="comment">//implementation (group: &#x27;org.springframework.boot&#x27;, name: &#x27;spring-boot-starter-web&#x27;, version:       &#x27;3.3.2&#x27;)&#123;</span></span><br><span class="line">    <span class="comment">//  transitive(false) // 不建议</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line">    implementation (<span class="attr">group:</span> <span class="string">&#x27;org.springframework.boot&#x27;</span>, <span class="attr">name:</span> <span class="string">&#x27;spring-boot-starter-web&#x27;</span>, <span class="attr">version:</span> <span class="string">&#x27;3.       3.2&#x27;</span>)</span><br><span class="line">    <span class="comment">//implementation &#x27;org.apache.logging.log4j:log4j-spring-cloud-config-client:2.17.3!!&#x27; //强制</span></span><br><span class="line">    implementation (<span class="string">&#x27;org.apache.logging.log4j:log4j-spring-cloud-config-client:2.17.3&#x27;</span>) <span class="comment">//强制</span></span><br><span class="line">    &#123;</span><br><span class="line">        version &#123;</span><br><span class="line">            strictly(<span class="string">&#x27;2.18.0&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    implementation (<span class="string">&#x27;org.apache.logging.log4j:log4j-spring-cloud-config-client:+&#x27;</span>) <span class="comment">// + 表示最新       release 版，动态声明，不建议使用</span></span><br><span class="line">    implementation (<span class="string">&#x27;org.apache.logging.log4j:log4j-spring-cloud-config-client:latest.       integration&#x27;</span>) <span class="comment">// ，动态声明，不建议使用</span></span><br></pre></td></tr></table></figure>

<h4 id="发现依赖冲突"><a href="#发现依赖冲突" class="headerlink" title="发现依赖冲突"></a>发现依赖冲突</h4>  <figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">configurations.all() &#123;</span><br><span class="line">    Configuration configuration-&gt;</span><br><span class="line">        configuration.resolutionStrategy.failOnVersionConflict()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><ul>
<li><p>脚本插件 (使用<code>apply from &#39;test.gradle&#39;</code> 引入)</p>
</li>
<li><p>二进制插件（对象插件）实现了<code>org.gradle.ap.Plugin</code>接口的插件，每一个都有 <code>plugin id</code></p>
<ol>
<li>内部<ol>
<li>apply方式<ul>
<li>apply(map具名参数)</li>
<li>apply(闭包)</li>
</ul>
</li>
<li>plugins DSL</li>
</ol>
</li>
<li>三方<ul>
<li>传统<ol>
<li>引入依赖</li>
<li>apply 应用</li>
</ol>
</li>
</ul>
</li>
<li>自定义<ul>
<li>构建过程中默认执行</li>
</ul>
</li>
</ol>
<p>更多资料见官方<a href="https://docs.gradle.org/current/userguide/plugin_reference.html">Gradle Plugin Reference</a></p>
</li>
<li><h3 id="插件关注点"><a href="#插件关注点" class="headerlink" title="插件关注点"></a>插件关注点</h3><ol>
<li>插件引用方法</li>
<li>主要功能</li>
<li>工程目录结构</li>
<li>依赖管理</li>
<li>常用属性</li>
</ol>
</li>
</ul>
</li>
<li><h2 id="buildSrc"><a href="#buildSrc" class="headerlink" title="buildSrc"></a><code>buildSrc</code></h2><p><code>buildSrc</code>是Grale默认的插件目录，Gradle编译的时候，会自动识别这个目录，将其中的代码编译为插件</p>
</li>
<li><h2 id="build-gradle"><a href="#build-gradle" class="headerlink" title="build.gradle"></a><code>build.gradle</code></h2><ul>
<li><p>是一个 gradle的构建脚本文件，支持Java、Kotlin、Groovy等语言</p>
</li>
<li><p>每个项目都会有一个 <code>build.gradle</code>文件，该文件是项目构建的入口，可配置版本、插件、依赖库等信息</p>
</li>
<li><p>每个 <code>build.gradle</code> 文件都有一个对应的 <code>Project</code> 实例，对 <code>build.gradle</code> 文件配置，本质就是设置     <code>Project</code> 实例的属性和方法</p>
</li>
<li><p><code>Root Project</code>可以获取到所有子项目，可在<code>Root Project</code>中对所有子项目进行统一的配置，如应用的插件、依赖的仓库等</p>
</li>
<li><h3 id="build-gradle常见属性和方法"><a href="#build-gradle常见属性和方法" class="headerlink" title="build.gradle常见属性和方法"></a><code>build.gradle</code>常见属性和方法</h3><ol>
<li>属性<ol>
<li>自带属性<ol>
<li><code>group</code>, 类型 Maven 中GAV坐标的Group</li>
<li><code>name(artifact)</code>, 项目名</li>
<li><code>version</code> 项目版本</li>
<li><code>sourceCompatibility</code> 指定编译JDK版本</li>
<li><code>targetCompatibility</code> 指定生成目标JDK版本</li>
<li><code>compileJava.options.encoding</code> 业务代码编码</li>
<li><code>compileTestJava.options.encoding</code> 测试代码编码</li>
</ol>
</li>
<li>自定义属性 <code>ext</code></li>
</ol>
</li>
<li>方法<ol>
<li><code>buildscript</code> 应用插件(老式插件)</li>
<li><code>apply</code> 应用插件 (老式插件)</li>
<li><code>task</code> 定义任务</li>
<li><code>plugins</code> 应用插件 新式插件应用方式</li>
<li><code>dependencies</code> 设置当前project的依赖信息</li>
<li><code>repositories</code> 设置当前project的仓库信息</li>
<li><code>allprojects</code> 设置所有 project的信息</li>
<li><code>subprojects</code> 设置所有子项目的信息</li>
<li><code>project</code> 设置子项目的信息</li>
<li><code>sourceSets</code> 配置此项目的源集</li>
<li><code>publishing</code> 配置发布插件添加的PublishingExtension</li>
<li><code>configurations</code> 配置此项目的依赖项配置</li>
<li><code>artifacts</code> 配置此项目的已发布构建</li>
</ol>
</li>
</ol>
<p><code>ext</code>为自定义属性，而<code>gradle.properties</code>中一般定义系统属性、环境变量、项目属性、JVM相关配置信息</p>
</li>
</ul>
</li>
<li><h2 id="项目启动"><a href="#项目启动" class="headerlink" title="项目启动"></a>项目启动</h2><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">&#x27;application&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">application &#123;</span><br><span class="line">    mainClass = <span class="string">&#x27;org.gradle.sample.Main&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//application &#123;</span></span><br><span class="line"><span class="comment">//    mainModule = &#x27;org.gradle.sample.app&#x27; // name defined in module-info.java</span></span><br><span class="line"><span class="comment">//    mainClass = &#x27;org.gradle.sample.Main&#x27;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">tasks.jar&#123;</span><br><span class="line">    manifest &#123;</span><br><span class="line">        attributes[<span class="string">&quot;Main-Class&quot;</span>]=<span class="string">&quot;org.frank.Main&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h2 id="项目发布"><a href="#项目发布" class="headerlink" title="项目发布"></a>项目发布</h2><p>发布到Maven仓库即可被其他项目使用</p>
<p><a href="https://docs.gradle.org/current/userguide/publishing_maven.html">项目发布到Maven仓库</a></p>
</li>
<li><h2 id="Gradle钩子函数"><a href="#Gradle钩子函数" class="headerlink" title="Gradle钩子函数"></a>Gradle钩子函数</h2><p><img src="/2024/08/03/Gradle-%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/hook_function.png" alt="Gradle 钩子函数"></p>
</li>
</ul>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Gradle项目不能启动</title>
    <url>/2024/08/02/Gradle%E9%A1%B9%E7%9B%AE%E4%B8%8D%E8%83%BD%E5%90%AF%E5%8A%A8/</url>
    <content><![CDATA[<p>在<code>build.gradle</code>添加</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">&#x27;application&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">application &#123;</span><br><span class="line">    mainClass= <span class="string">&#x27;org.frank.Main&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tasks.jar&#123;</span><br><span class="line">    manifest &#123;</span><br><span class="line">        attributes[<span class="string">&quot;Main-Class&quot;</span>]=<span class="string">&#x27;org.frank.Main&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Gradle</tag>
      </tags>
  </entry>
  <entry>
    <title>IntelliJ IDEA 编辑 pom.xml 卡顿</title>
    <url>/2024/08/03/IntelliJ-IDEA-%E7%BC%96%E8%BE%91-pom-xml-%E5%8D%A1%E9%A1%BF/</url>
    <content><![CDATA[<p>删除<code>%localappdata%\JetBrains\IntelliJIdea&#123;version&#125;\Maven\Indices</code>目录下的内容</p>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>IntelliJ IDEA</tag>
        <tag>POM</tag>
      </tags>
  </entry>
  <entry>
    <title>Java官方文档使用</title>
    <url>/2024/08/01/Java%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>进入<a href="https://docs.oracle.com/en/java/javase/21/index.html">Oracal Help Center</a>选择对应 JDK 版本，然后分类选择。<br>如查询 <code>java</code> 命令选项，进入<a href="https://docs.oracle.com/en/java/javase/21/docs/specs/man/index.html">JDK Tool Specifications</a>，<br>再进入<a href="https://docs.oracle.com/en/java/javase/21/docs/specs/man/java.html">java</a>信息页面。</p>
<p>如查看系统环境</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PS</span> D:\Temp\Java&gt; java <span class="literal">-XshowSettings</span></span><br><span class="line">VM settings:</span><br><span class="line">    Max. Heap Size (Estimated): <span class="number">7.96</span>G</span><br><span class="line">    <span class="keyword">Using</span> VM: OpenJDK 64-Bit Server VM</span><br><span class="line"></span><br><span class="line">Property settings:</span><br><span class="line">    file.encoding = UTF<span class="literal">-8</span></span><br><span class="line">    file.separator = \</span><br><span class="line">    java.class.path =</span><br><span class="line">    java.class.version = <span class="number">65.0</span></span><br><span class="line">    java.home = D:\ProgramFiles\Java\Jabba\jdk\system@<span class="number">21.0</span>.<span class="number">3</span><span class="literal">-full-liberica</span></span><br><span class="line">    java.io.tmpdir = C:\Users\FRANK\AppData\Local\Temp\</span><br><span class="line">    java.library.path = D:\ProgramFiles\Java\Jabba\jdk\system@<span class="number">21.0</span>.<span class="number">3</span><span class="literal">-full-liberica</span>\bin</span><br><span class="line">        C:\Windows\Sun\Java\bin</span><br><span class="line">        C:\Windows\system32</span><br><span class="line">        C:\Windows</span><br><span class="line">        C:\Program Files\Microsoft Visual Studio\<span class="number">2022</span>\Enterprise\Common7\IDE\CommonExtensions\Microsoft\TestWindow</span><br><span class="line">        C:\Program Files\Microsoft Visual Studio\<span class="number">2022</span>\Enterprise\Common7\IDE\CommonExtensions\Microsoft\TeamFoundation\Team Explorer</span><br><span class="line">        C:\Program Files\Microsoft Visual Studio\<span class="number">2022</span>\Enterprise\MSBuild\Current\bin\Roslyn</span><br><span class="line">        C:\Program Files (x86)\Microsoft SDKs\Windows\v10.<span class="number">0</span>A\bin\NETFX <span class="number">4.8</span> Tools\x64\</span><br><span class="line">        C:\Program Files\Microsoft Visual Studio\<span class="number">2022</span>\Enterprise\Common7\IDE\CommonExtensions\Microsoft\FSharp\Tools</span><br><span class="line">        C:\Program Files\Microsoft Visual Studio\<span class="number">2022</span>\Enterprise\Team Tools\DiagnosticsHub\Collector</span><br><span class="line">        C:\Program Files\Microsoft Visual Studio\<span class="number">2022</span>\Enterprise\Common7\IDE\Extensions\Microsoft\CodeCoverage.Console</span><br><span class="line">        C:\Program Files\Microsoft Visual Studio\<span class="number">2022</span>\Enterprise\\MSBuild\Current\Bin\amd64</span><br><span class="line">        C:\Windows\Microsoft.NET\Framework64\v4.<span class="number">0.30319</span></span><br><span class="line">        C:\Program Files\Microsoft Visual Studio\<span class="number">2022</span>\Enterprise\Common7\IDE\</span><br><span class="line">        C:\Program Files\Microsoft Visual Studio\<span class="number">2022</span>\Enterprise\Common7\Tools\</span><br><span class="line">        C:\Windows\system32</span><br><span class="line">        D:\ProgramFiles\Utils</span><br><span class="line">        D:\ProgramFiles\nvm<span class="literal">-noinstall</span></span><br><span class="line">        D:\ProgramFiles\nvm<span class="literal">-noinstall</span>\Node.js</span><br><span class="line">        D:\ProgramFiles\Python</span><br><span class="line">        D:\ProgramFiles\Python\Scripts</span><br><span class="line">        C:\Program Files (x86)\Windows Kits\<span class="number">10</span>\Windows Performance Toolkit\</span><br><span class="line">        D:\ProgramFiles\Git\bin</span><br><span class="line">        C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\<span class="number">170</span>\Tools\Binn\</span><br><span class="line">        C:\Program Files\Microsoft SQL Server\<span class="number">150</span>\Tools\Binn\</span><br><span class="line">        C:\Program Files\dotnet\</span><br><span class="line">        C:\Program Files\TortoiseGit\bin</span><br><span class="line">        C:\Windows\System32\WindowsPowerShell\v1.<span class="number">0</span></span><br><span class="line">        C:\Windows\System32\OpenSSH</span><br><span class="line">        C:\Users\FRANK\.cargo\bin</span><br><span class="line">        C:\Users\FRANK\AppData\Local\Microsoft\WindowsApps</span><br><span class="line">        C:\Users\FRANK\.dotnet\tools</span><br><span class="line">        D:\ProgramFiles\Java\Jabba\jdk\system@<span class="number">21.0</span>.<span class="number">3</span><span class="literal">-full-liberica</span>\bin</span><br><span class="line"></span><br><span class="line">        .</span><br><span class="line">    java.runtime.name = OpenJDK Runtime Environment</span><br><span class="line">    java.runtime.version = <span class="number">21.0</span>.<span class="number">3</span>+<span class="number">12</span><span class="literal">-LTS</span></span><br><span class="line">    java.specification.name = Java Platform API Specification</span><br><span class="line">    java.specification.vendor = Oracle Corporation</span><br><span class="line">    java.specification.version = <span class="number">21</span></span><br><span class="line">    java.vendor = BellSoft</span><br><span class="line">    java.vendor.url = https://bell<span class="literal">-sw</span>.com/</span><br><span class="line">    java.vendor.url.bug = https://bell<span class="literal">-sw</span>.com/support</span><br><span class="line">    java.version = <span class="number">21.0</span>.<span class="number">3</span></span><br><span class="line">    java.version.date = <span class="number">2024</span><span class="literal">-04-16</span></span><br><span class="line">    java.vm.compressedOopsMode = Zero based</span><br><span class="line">    java.vm.info = mixed mode, sharing</span><br><span class="line">    java.vm.name = OpenJDK <span class="number">64</span><span class="literal">-Bit</span> Server VM</span><br><span class="line">    java.vm.specification.name = Java Virtual Machine Specification</span><br><span class="line">    java.vm.specification.vendor = Oracle Corporation</span><br><span class="line">    java.vm.specification.version = <span class="number">21</span></span><br><span class="line">    java.vm.vendor = BellSoft</span><br><span class="line">    java.vm.version = <span class="number">21.0</span>.<span class="number">3</span>+<span class="number">12</span><span class="literal">-LTS</span></span><br><span class="line">    jdk.debug = release</span><br><span class="line">    line.separator = \r \n</span><br><span class="line">    native.encoding = GBK</span><br><span class="line">    os.arch = amd64</span><br><span class="line">    os.name = Windows <span class="number">11</span></span><br><span class="line">    os.version = <span class="number">10.0</span></span><br><span class="line">    path.separator = ;</span><br><span class="line">    stderr.encoding = ms936</span><br><span class="line">    stdout.encoding = ms936</span><br><span class="line">    sun.arch.data.model = <span class="number">64</span></span><br><span class="line">    sun.boot.library.path = D:\ProgramFiles\Java\Jabba\jdk\system@<span class="number">21.0</span>.<span class="number">3</span><span class="literal">-full-liberica</span>\bin</span><br><span class="line">    sun.cpu.endian = little</span><br><span class="line">    sun.cpu.isalist = amd64</span><br><span class="line">    sun.io.unicode.encoding = UnicodeLittle</span><br><span class="line">    sun.java.launcher = SUN_STANDARD</span><br><span class="line">    sun.jnu.encoding = GBK</span><br><span class="line">    sun.management.compiler = HotSpot <span class="number">64</span><span class="literal">-Bit</span> Tiered Compilers</span><br><span class="line">    sun.os.patch.level =</span><br><span class="line">    user.country = CN</span><br><span class="line">    user.dir = D:\Temp\Java</span><br><span class="line">    user.home = C:\Users\FRANK</span><br><span class="line">    user.language = zh</span><br><span class="line">    user.name = FRANK</span><br><span class="line">    user.script =</span><br><span class="line">    user.variant =</span><br><span class="line"></span><br><span class="line">Locale settings:</span><br><span class="line">    default locale = 中文 (中国)</span><br><span class="line">    default display locale = 中文 (中国)</span><br><span class="line">    default format locale = 中文 (中国)</span><br><span class="line">    tzdata version = <span class="number">2024</span>a</span><br><span class="line">    available locales = , af, af_NA, af_ZA, af_ZA_<span class="comment">#Latn, agq, agq_CM, agq_CM_#Latn,</span></span><br><span class="line">        ak, ak_GH, ak_GH_<span class="comment">#Latn, am, am_ET, am_ET_#Ethi, ann, ann_NG,</span></span><br><span class="line">        ann_NG_<span class="comment">#Latn, ar, ar_001, ar_AE, ar_BH, ar_DJ, ar_DZ, ar_EG,</span></span><br><span class="line">        ar_EG_<span class="comment">#Arab, ar_EH, ar_ER, ar_IL, ar_IQ, ar_JO, ar_KM, ar_KW,</span></span><br><span class="line">        ar_LB, ar_LY, ar_MA, ar_MR, ar_OM, ar_PS, ar_QA, ar_SA,</span><br><span class="line">        ar_SD, ar_SO, ar_SS, ar_SY, ar_TD, ar_TN, ar_YE, as,</span><br><span class="line">        as_IN, as_IN_<span class="comment">#Beng, asa, asa_TZ, asa_TZ_#Latn, ast, ast_ES, ast_ES_#Latn,</span></span><br><span class="line">        az, az_AZ, az_AZ_<span class="comment">#Cyrl, az_AZ_#Latn, az__#Cyrl, az__#Latn, bas, bas_CM,</span></span><br><span class="line">        bas_CM_<span class="comment">#Latn, be, be_BY, be_BY_#Cyrl, be__TARASK, bem, bem_ZM, bem_ZM_#Latn,</span></span><br><span class="line">        bez, bez_TZ, bez_TZ_<span class="comment">#Latn, bg, bg_BG, bg_BG_#Cyrl, bgc, bgc_IN,</span></span><br><span class="line">        bgc_IN_<span class="comment">#Deva, bho, bho_IN, bho_IN_#Deva, bm, bm_ML, bm_ML_#Latn, bn,</span></span><br><span class="line">        bn_BD, bn_BD_<span class="comment">#Beng, bn_IN, bo, bo_CN, bo_CN_#Tibt, bo_IN, br,</span></span><br><span class="line">        br_FR, br_FR_<span class="comment">#Latn, brx, brx_IN, brx_IN_#Deva, bs, bs_BA, bs_BA_#Cyrl,</span></span><br><span class="line">        bs_BA_<span class="comment">#Latn, bs__#Cyrl, bs__#Latn, ca, ca_AD, ca_ES, ca_ES_#Latn, ca_ES_VALENCIA,</span></span><br><span class="line">        ca_FR, ca_IT, ccp, ccp_BD, ccp_BD_<span class="comment">#Cakm, ccp_IN, ce, ce_RU,</span></span><br><span class="line">        ce_RU_<span class="comment">#Cyrl, ceb, ceb_PH, ceb_PH_#Latn, cgg, cgg_UG, cgg_UG_#Latn, chr,</span></span><br><span class="line">        chr_US, chr_US_<span class="comment">#Cher, ckb, ckb_IQ, ckb_IQ_#Arab, ckb_IR, cs, cs_CZ,</span></span><br><span class="line">        cs_CZ_<span class="comment">#Latn, cv, cv_RU, cv_RU_#Cyrl, cy, cy_GB, cy_GB_#Latn, da,</span></span><br><span class="line">        da_DK, da_DK_<span class="comment">#Latn, da_GL, dav, dav_KE, dav_KE_#Latn, de, de_AT,</span></span><br><span class="line">        de_BE, de_CH, de_DE, de_DE_<span class="comment">#Latn, de_IT, de_LI, de_LU, dje,</span></span><br><span class="line">        dje_NE, dje_NE_<span class="comment">#Latn, doi, doi_IN, doi_IN_#Deva, dsb, dsb_DE, dsb_DE_#Latn,</span></span><br><span class="line">        dua, dua_CM, dua_CM_<span class="comment">#Latn, dyo, dyo_SN, dyo_SN_#Latn, dz, dz_BT,</span></span><br><span class="line">        dz_BT_<span class="comment">#Tibt, ebu, ebu_KE, ebu_KE_#Latn, ee, ee_GH, ee_GH_#Latn, ee_TG,</span></span><br><span class="line">        el, el_CY, el_GR, el_GR_<span class="comment">#Grek, el__POLYTON, en, en_001, en_150,</span></span><br><span class="line">        en_AE, en_AG, en_AI, en_AS, en_AT, en_AU, en_BB, en_BE,</span><br><span class="line">        en_BI, en_BM, en_BS, en_BW, en_BZ, en_CA, en_CC, en_CH,</span><br><span class="line">        en_CK, en_CM, en_CX, en_CY, en_DE, en_DG, en_DK, en_DM,</span><br><span class="line">        en_ER, en_FI, en_FJ, en_FK, en_FM, en_GB, en_GD, en_GG,</span><br><span class="line">        en_GH, en_GI, en_GM, en_GU, en_GY, en_HK, en_IE, en_IL,</span><br><span class="line">        en_IM, en_IN, en_IO, en_JE, en_JM, en_KE, en_KI, en_KN,</span><br><span class="line">        en_KY, en_LC, en_LR, en_LS, en_MG, en_MH, en_MO, en_MP,</span><br><span class="line">        en_MS, en_MT, en_MU, en_MV, en_MW, en_MY, en_NA, en_NF,</span><br><span class="line">        en_NG, en_NL, en_NR, en_NU, en_NZ, en_PG, en_PH, en_PK,</span><br><span class="line">        en_PN, en_PR, en_PW, en_RW, en_SB, en_SC, en_SD, en_SE,</span><br><span class="line">        en_SG, en_SH, en_SI, en_SL, en_SS, en_SX, en_SZ, en_TC,</span><br><span class="line">        en_TK, en_TO, en_TT, en_TV, en_TZ, en_UG, en_UM, en_US,</span><br><span class="line">        en_US_<span class="comment">#Latn, en_US_POSIX, en_VC, en_VG, en_VI, en_VU, en_WS, en_ZA,</span></span><br><span class="line">        en_ZM, en_ZW, eo, eo_001, eo_001_<span class="comment">#Latn, es, es_419, es_AR,</span></span><br><span class="line">        es_BO, es_BR, es_BZ, es_CL, es_CO, es_CR, es_CU, es_DO,</span><br><span class="line">        es_EA, es_EC, es_ES, es_ES_<span class="comment">#Latn, es_GQ, es_GT, es_HN, es_IC,</span></span><br><span class="line">        es_MX, es_NI, es_PA, es_PE, es_PH, es_PR, es_PY, es_SV,</span><br><span class="line">        es_US, es_UY, es_VE, et, et_EE, et_EE_<span class="comment">#Latn, eu, eu_ES,</span></span><br><span class="line">        eu_ES_<span class="comment">#Latn, ewo, ewo_CM, ewo_CM_#Latn, fa, fa_AF, fa_IR, fa_IR_#Arab,</span></span><br><span class="line">        ff, ff_BF_<span class="comment">#Adlm, ff_BF_#Latn, ff_CM_#Adlm, ff_CM_#Latn, ff_GH_#Adlm, ff_GH_#Latn, ff_GM_#Adlm,</span></span><br><span class="line">        ff_GM_<span class="comment">#Latn, ff_GN, ff_GN_#Adlm, ff_GN_#Latn, ff_GW_#Adlm, ff_GW_#Latn, ff_LR_#Adlm, ff_LR_#Latn,</span></span><br><span class="line">        ff_MR_<span class="comment">#Adlm, ff_MR_#Latn, ff_NE_#Adlm, ff_NE_#Latn, ff_NG_#Adlm, ff_NG_#Latn, ff_SL_#Adlm, ff_SL_#Latn,</span></span><br><span class="line">        ff_SN, ff_SN_<span class="comment">#Adlm, ff_SN_#Latn, ff__#Adlm, ff__#Latn, fi, fi_FI, fi_FI_#Latn,</span></span><br><span class="line">        fil, fil_PH, fil_PH_<span class="comment">#Latn, fo, fo_DK, fo_FO, fo_FO_#Latn, fr,</span></span><br><span class="line">        fr_BE, fr_BF, fr_BI, fr_BJ, fr_BL, fr_CA, fr_CD, fr_CF,</span><br><span class="line">        fr_CG, fr_CH, fr_CI, fr_CM, fr_DJ, fr_DZ, fr_FR, fr_FR_<span class="comment">#Latn,</span></span><br><span class="line">        fr_GA, fr_GF, fr_GN, fr_GP, fr_GQ, fr_HT, fr_KM, fr_LU,</span><br><span class="line">        fr_MA, fr_MC, fr_MF, fr_MG, fr_ML, fr_MQ, fr_MR, fr_MU,</span><br><span class="line">        fr_NC, fr_NE, fr_PF, fr_PM, fr_RE, fr_RW, fr_SC, fr_SN,</span><br><span class="line">        fr_SY, fr_TD, fr_TG, fr_TN, fr_VU, fr_WF, fr_YT, frr,</span><br><span class="line">        frr_DE, frr_DE_<span class="comment">#Latn, fur, fur_IT, fur_IT_#Latn, fy, fy_NL, fy_NL_#Latn,</span></span><br><span class="line">        ga, ga_GB, ga_IE, ga_IE_<span class="comment">#Latn, gd, gd_GB, gd_GB_#Latn, gl,</span></span><br><span class="line">        gl_ES, gl_ES_<span class="comment">#Latn, gsw, gsw_CH, gsw_CH_#Latn, gsw_FR, gsw_LI, gu,</span></span><br><span class="line">        gu_IN, gu_IN_<span class="comment">#Gujr, guz, guz_KE, guz_KE_#Latn, gv, gv_IM, gv_IM_#Latn,</span></span><br><span class="line">        ha, ha_GH, ha_NE, ha_NG, ha_NG_<span class="comment">#Latn, haw, haw_US, haw_US_#Latn,</span></span><br><span class="line">        he, he_IL, he_IL_<span class="comment">#Hebr, hi, hi_IN, hi_IN_#Deva, hi_IN_#Latn, hi__#Latn,</span></span><br><span class="line">        hr, hr_BA, hr_HR, hr_HR_<span class="comment">#Latn, hsb, hsb_DE, hsb_DE_#Latn, hu,</span></span><br><span class="line">        hu_HU, hu_HU_<span class="comment">#Latn, hy, hy_AM, hy_AM_#Armn, ia, ia_001, ia_001_#Latn,</span></span><br><span class="line">        id, id_ID, id_ID_<span class="comment">#Latn, ig, ig_NG, ig_NG_#Latn, ii, ii_CN,</span></span><br><span class="line">        ii_CN_<span class="comment">#Yiii, is, is_IS, is_IS_#Latn, it, it_CH, it_IT, it_IT_#Latn,</span></span><br><span class="line">        it_SM, it_VA, ja, ja_JP, ja_JP_<span class="comment">#Jpan, ja_JP_JP_#u-ca-japanese, jgo, jgo_CM,</span></span><br><span class="line">        jgo_CM_<span class="comment">#Latn, jmc, jmc_TZ, jmc_TZ_#Latn, jv, jv_ID, jv_ID_#Latn, ka,</span></span><br><span class="line">        ka_GE, ka_GE_<span class="comment">#Geor, kab, kab_DZ, kab_DZ_#Latn, kam, kam_KE, kam_KE_#Latn,</span></span><br><span class="line">        kde, kde_TZ, kde_TZ_<span class="comment">#Latn, kea, kea_CV, kea_CV_#Latn, kgp, kgp_BR,</span></span><br><span class="line">        kgp_BR_<span class="comment">#Latn, khq, khq_ML, khq_ML_#Latn, ki, ki_KE, ki_KE_#Latn, kk,</span></span><br><span class="line">        kk_KZ, kk_KZ_<span class="comment">#Cyrl, kkj, kkj_CM, kkj_CM_#Latn, kl, kl_GL, kl_GL_#Latn,</span></span><br><span class="line">        kln, kln_KE, kln_KE_<span class="comment">#Latn, km, km_KH, km_KH_#Khmr, kn, kn_IN,</span></span><br><span class="line">        kn_IN_<span class="comment">#Knda, ko, ko_KP, ko_KR, ko_KR_#Kore, kok, kok_IN, kok_IN_#Deva,</span></span><br><span class="line">        ks, ks_IN, ks_IN_<span class="comment">#Arab, ks_IN_#Deva, ks__#Arab, ks__#Deva, ksb, ksb_TZ,</span></span><br><span class="line">        ksb_TZ_<span class="comment">#Latn, ksf, ksf_CM, ksf_CM_#Latn, ksh, ksh_DE, ksh_DE_#Latn, ku,</span></span><br><span class="line">        ku_TR, ku_TR_<span class="comment">#Latn, kw, kw_GB, kw_GB_#Latn, ky, ky_KG, ky_KG_#Cyrl,</span></span><br><span class="line">        lag, lag_TZ, lag_TZ_<span class="comment">#Latn, lb, lb_LU, lb_LU_#Latn, lg, lg_UG,</span></span><br><span class="line">        lg_UG_<span class="comment">#Latn, lkt, lkt_US, lkt_US_#Latn, ln, ln_AO, ln_CD, ln_CD_#Latn,</span></span><br><span class="line">        ln_CF, ln_CG, lo, lo_LA, lo_LA_<span class="comment">#Laoo, lrc, lrc_IQ, lrc_IR,</span></span><br><span class="line">        lrc_IR_<span class="comment">#Arab, lt, lt_LT, lt_LT_#Latn, lu, lu_CD, lu_CD_#Latn, luo,</span></span><br><span class="line">        luo_KE, luo_KE_<span class="comment">#Latn, luy, luy_KE, luy_KE_#Latn, lv, lv_LV, lv_LV_#Latn,</span></span><br><span class="line">        mai, mai_IN, mai_IN_<span class="comment">#Deva, mas, mas_KE, mas_KE_#Latn, mas_TZ, mdf,</span></span><br><span class="line">        mdf_RU, mdf_RU_<span class="comment">#Cyrl, mer, mer_KE, mer_KE_#Latn, mfe, mfe_MU, mfe_MU_#Latn,</span></span><br><span class="line">        mg, mg_MG, mg_MG_<span class="comment">#Latn, mgh, mgh_MZ, mgh_MZ_#Latn, mgo, mgo_CM,</span></span><br><span class="line">        mgo_CM_<span class="comment">#Latn, mi, mi_NZ, mi_NZ_#Latn, mk, mk_MK, mk_MK_#Cyrl, ml,</span></span><br><span class="line">        ml_IN, ml_IN_<span class="comment">#Mlym, mn, mn_MN, mn_MN_#Cyrl, mni, mni_IN, mni_IN_#Beng,</span></span><br><span class="line">        mni__<span class="comment">#Beng, mr, mr_IN, mr_IN_#Deva, ms, ms_BN, ms_ID, ms_MY,</span></span><br><span class="line">        ms_MY_<span class="comment">#Latn, ms_SG, mt, mt_MT, mt_MT_#Latn, mua, mua_CM, mua_CM_#Latn,</span></span><br><span class="line">        my, my_MM, my_MM_<span class="comment">#Mymr, mzn, mzn_IR, mzn_IR_#Arab, naq, naq_NA,</span></span><br><span class="line">        naq_NA_<span class="comment">#Latn, nb, nb_NO, nb_NO_#Latn, nb_SJ, nd, nd_ZW, nd_ZW_#Latn,</span></span><br><span class="line">        nds, nds_DE, nds_DE_<span class="comment">#Latn, nds_NL, ne, ne_IN, ne_NP, ne_NP_#Deva,</span></span><br><span class="line">        nl, nl_AW, nl_BE, nl_BQ, nl_CW, nl_NL, nl_NL_<span class="comment">#Latn, nl_SR,</span></span><br><span class="line">        nl_SX, nmg, nmg_CM, nmg_CM_<span class="comment">#Latn, nn, nn_NO, nn_NO_#Latn, nnh,</span></span><br><span class="line">        nnh_CM, nnh_CM_<span class="comment">#Latn, no, no_NO, no_NO_#Latn, no_NO_NY, nus, nus_SS,</span></span><br><span class="line">        nus_SS_<span class="comment">#Latn, nyn, nyn_UG, nyn_UG_#Latn, oc, oc_ES, oc_FR, oc_FR_#Latn,</span></span><br><span class="line">        om, om_ET, om_ET_<span class="comment">#Latn, om_KE, or, or_IN, or_IN_#Orya, os,</span></span><br><span class="line">        os_GE, os_GE_<span class="comment">#Cyrl, os_RU, pa, pa_IN, pa_IN_#Guru, pa_PK, pa_PK_#Arab,</span></span><br><span class="line">        pa__<span class="comment">#Arab, pa__#Guru, pcm, pcm_NG, pcm_NG_#Latn, pis, pis_SB, pis_SB_#Latn,</span></span><br><span class="line">        pl, pl_PL, pl_PL_<span class="comment">#Latn, ps, ps_AF, ps_AF_#Arab, ps_PK, pt,</span></span><br><span class="line">        pt_AO, pt_BR, pt_BR_<span class="comment">#Latn, pt_CH, pt_CV, pt_GQ, pt_GW, pt_LU,</span></span><br><span class="line">        pt_MO, pt_MZ, pt_PT, pt_ST, pt_TL, qu, qu_BO, qu_EC,</span><br><span class="line">        qu_PE, qu_PE_<span class="comment">#Latn, raj, raj_IN, raj_IN_#Deva, rm, rm_CH, rm_CH_#Latn,</span></span><br><span class="line">        rn, rn_BI, rn_BI_<span class="comment">#Latn, ro, ro_MD, ro_RO, ro_RO_#Latn, rof,</span></span><br><span class="line">        rof_TZ, rof_TZ_<span class="comment">#Latn, ru, ru_BY, ru_KG, ru_KZ, ru_MD, ru_RU,</span></span><br><span class="line">        ru_RU_<span class="comment">#Cyrl, ru_UA, rw, rw_RW, rw_RW_#Latn, rwk, rwk_TZ, rwk_TZ_#Latn,</span></span><br><span class="line">        sa, sa_IN, sa_IN_<span class="comment">#Deva, sah, sah_RU, sah_RU_#Cyrl, saq, saq_KE,</span></span><br><span class="line">        saq_KE_<span class="comment">#Latn, sat, sat_IN, sat_IN_#Olck, sat__#Olck, sbp, sbp_TZ, sbp_TZ_#Latn,</span></span><br><span class="line">        <span class="built_in">sc</span>, sc_IT, sc_IT_<span class="comment">#Latn, sd, sd_IN, sd_IN_#Deva, sd_PK, sd_PK_#Arab,</span></span><br><span class="line">        sd__<span class="comment">#Arab, sd__#Deva, se, se_FI, se_NO, se_NO_#Latn, se_SE, seh,</span></span><br><span class="line">        seh_MZ, seh_MZ_<span class="comment">#Latn, ses, ses_ML, ses_ML_#Latn, sg, sg_CF, sg_CF_#Latn,</span></span><br><span class="line">        shi, shi_MA, shi_MA_<span class="comment">#Latn, shi_MA_#Tfng, shi__#Latn, shi__#Tfng, si, si_LK,</span></span><br><span class="line">        si_LK_<span class="comment">#Sinh, sk, sk_SK, sk_SK_#Latn, sl, sl_SI, sl_SI_#Latn, smn,</span></span><br><span class="line">        smn_FI, smn_FI_<span class="comment">#Latn, sms, sms_FI, sms_FI_#Latn, sn, sn_ZW, sn_ZW_#Latn,</span></span><br><span class="line">        so, so_DJ, so_ET, so_KE, so_SO, so_SO_<span class="comment">#Latn, sq, sq_AL,</span></span><br><span class="line">        sq_AL_<span class="comment">#Latn, sq_MK, sq_XK, sr, sr_BA, sr_BA_#Cyrl, sr_BA_#Latn, sr_CS,</span></span><br><span class="line">        sr_ME, sr_ME_<span class="comment">#Cyrl, sr_ME_#Latn, sr_RS, sr_RS_#Cyrl, sr_RS_#Latn, sr_XK_#Cyrl, sr_XK_#Latn,</span></span><br><span class="line">        sr__<span class="comment">#Cyrl, sr__#Latn, su, su_ID, su_ID_#Latn, su__#Latn, sv, sv_AX,</span></span><br><span class="line">        sv_FI, sv_SE, sv_SE_<span class="comment">#Latn, sw, sw_CD, sw_KE, sw_TZ, sw_TZ_#Latn,</span></span><br><span class="line">        sw_UG, ta, ta_IN, ta_IN_<span class="comment">#Taml, ta_LK, ta_MY, ta_SG, te,</span></span><br><span class="line">        te_IN, te_IN_<span class="comment">#Telu, teo, teo_KE, teo_UG, teo_UG_#Latn, tg, tg_TJ,</span></span><br><span class="line">        tg_TJ_<span class="comment">#Cyrl, th, th_TH, th_TH_#Thai, th_TH_TH_#u-nu-thai, ti, ti_ER, ti_ET,</span></span><br><span class="line">        ti_ET_<span class="comment">#Ethi, tk, tk_TM, tk_TM_#Latn, to, to_TO, to_TO_#Latn, tok,</span></span><br><span class="line">        tok_001, tok_001_<span class="comment">#Latn, tr, tr_CY, tr_TR, tr_TR_#Latn, tt, tt_RU,</span></span><br><span class="line">        tt_RU_<span class="comment">#Cyrl, twq, twq_NE, twq_NE_#Latn, tzm, tzm_MA, tzm_MA_#Latn, ug,</span></span><br><span class="line">        ug_CN, ug_CN_<span class="comment">#Arab, uk, uk_UA, uk_UA_#Cyrl, ur, ur_IN, ur_PK,</span></span><br><span class="line">        ur_PK_<span class="comment">#Arab, uz, uz_AF, uz_AF_#Arab, uz_UZ, uz_UZ_#Cyrl, uz_UZ_#Latn, uz__#Arab,</span></span><br><span class="line">        uz__<span class="comment">#Cyrl, uz__#Latn, vai, vai_LR, vai_LR_#Latn, vai_LR_#Vaii, vai__#Latn, vai__#Vaii,</span></span><br><span class="line">        vi, vi_VN, vi_VN_<span class="comment">#Latn, vun, vun_TZ, vun_TZ_#Latn, wae, wae_CH,</span></span><br><span class="line">        wae_CH_<span class="comment">#Latn, wo, wo_SN, wo_SN_#Latn, xh, xh_ZA, xh_ZA_#Latn, xog,</span></span><br><span class="line">        xog_UG, xog_UG_<span class="comment">#Latn, yav, yav_CM, yav_CM_#Latn, yi, yi_001, yi_001_#Hebr,</span></span><br><span class="line">        yo, yo_BJ, yo_NG, yo_NG_<span class="comment">#Latn, yrl, yrl_BR, yrl_BR_#Latn, yrl_CO,</span></span><br><span class="line">        yrl_VE, yue, yue_CN, yue_CN_<span class="comment">#Hans, yue_HK, yue_HK_#Hant, yue__#Hans, yue__#Hant,</span></span><br><span class="line">        zgh, zgh_MA, zgh_MA_<span class="comment">#Tfng, zh, zh_CN, zh_CN_#Hans, zh_HK, zh_HK_#Hans,</span></span><br><span class="line">        zh_HK_<span class="comment">#Hant, zh_MO, zh_MO_#Hans, zh_MO_#Hant, zh_SG, zh_SG_#Hans, zh_TW, zh_TW_#Hant,</span></span><br><span class="line">        zh__<span class="comment">#Hans, zh__#Hant, zu, zu_ZA, zu_ZA_#Latn</span></span><br><span class="line">用法：java [<span class="type">options</span>] &lt;主类&gt; [<span class="type">args...</span>]</span><br><span class="line">           （执行类）</span><br><span class="line">   或  java [<span class="type">options</span>] <span class="literal">-jar</span> &lt;jar 文件&gt; [<span class="type">args...</span>]</span><br><span class="line">           （执行 jar 文件）</span><br><span class="line">   或  java [<span class="type">options</span>] <span class="literal">-m</span> &lt;模块&gt;[/&lt;主类&gt;] [<span class="type">args...</span>]</span><br><span class="line">       java [<span class="type">options</span>] <span class="literal">--module</span> &lt;模块&gt;[/&lt;主类&gt;] [<span class="type">args...</span>]</span><br><span class="line">           （执行模块中的主类）</span><br><span class="line">   或  java [<span class="type">options</span>] &lt;源文件&gt; [<span class="type">args</span>]</span><br><span class="line">           （执行单个源文件程序）</span><br><span class="line"></span><br><span class="line"> 将主类、源文件、<span class="literal">-jar</span> &lt;jar 文件&gt;、<span class="literal">-m</span> 或</span><br><span class="line"> <span class="literal">--module</span> &lt;模块&gt;/&lt;主类&gt; 后的参数作为参数</span><br><span class="line"> 传递到主类。</span><br><span class="line"></span><br><span class="line"> 其中，选项包括：</span><br><span class="line"></span><br><span class="line">    <span class="literal">-client</span>       选择 <span class="string">&quot;client&quot;</span> VM</span><br><span class="line">    <span class="literal">-cp</span> &lt;目录和 zip/jar 文件的类搜索路径&gt;</span><br><span class="line">    <span class="literal">-classpath</span> &lt;目录和 zip/jar 文件的类搜索路径&gt;</span><br><span class="line">    <span class="literal">--class-path</span> &lt;目录和 zip/jar 文件的类搜索路径&gt;</span><br><span class="line">                  使用 ; 分隔的, 用于搜索类文件的目录, JAR 档案</span><br><span class="line">                  和 ZIP 档案列表。</span><br><span class="line">    <span class="literal">-p</span> &lt;模块路径&gt;</span><br><span class="line">    <span class="literal">--module-path</span> &lt;模块路径&gt;...</span><br><span class="line">                  ; 分隔的元素列表，每个元素都是</span><br><span class="line">                  模块或包含模块的目录的文件路径。每个模块都是</span><br><span class="line">                  模块化 JAR 或展开的模块目录。</span><br><span class="line">    <span class="literal">--upgrade-module-path</span> &lt;模块路径&gt;...</span><br><span class="line">                  ; 分隔的元素列表，每个元素都是</span><br><span class="line">                  模块或包含模块（用于替换运行时映像中的</span><br><span class="line">                  可升级模块）的目录的文件路径。每个模块都是</span><br><span class="line">                  模块化 JAR 或展开的模块目录。</span><br><span class="line">    <span class="literal">--add-modules</span> &lt;模块名称&gt;[,&lt;模块名称&gt;<span class="type">...</span>]</span><br><span class="line">                  除了初始模块之外要解析的根模块。</span><br><span class="line">                  &lt;模块名称&gt; 还可以为 ALL<span class="literal">-DEFAULT</span>, ALL<span class="literal">-SYSTEM</span>,</span><br><span class="line">                  ALL<span class="literal">-MODULE-PATH</span>.</span><br><span class="line">    <span class="literal">--enable-native-access</span> &lt;module name&gt;[,&lt;<span class="type">module</span> <span class="type">name</span>&gt;<span class="type">...</span>]</span><br><span class="line">                  允许执行受限本机操作的模块。</span><br><span class="line">                  &lt;module name&gt; 还可以为 ALL<span class="literal">-UNNAMED</span>。</span><br><span class="line">    <span class="literal">--list-modules</span></span><br><span class="line">                  列出可观察模块并退出</span><br><span class="line">    <span class="literal">-d</span> &lt;module name&gt;</span><br><span class="line">    <span class="literal">--describe-module</span> &lt;模块名称&gt;</span><br><span class="line">                  描述模块并退出</span><br><span class="line">    <span class="literal">--dry-run</span>     创建 VM 并加载主类, 但不执行 main 方法。</span><br><span class="line">                  此 <span class="literal">--dry-run</span> 选项对于验证诸如</span><br><span class="line">                  模块系统配置这样的命令行选项可能非常有用。</span><br><span class="line">    <span class="literal">--validate-modules</span></span><br><span class="line">                  验证所有模块并退出</span><br><span class="line">                  <span class="literal">--validate-modules</span> 选项对于查找</span><br><span class="line">                  模块路径中模块的冲突及其他错误可能非常有用。</span><br><span class="line">    <span class="literal">-D</span>&lt;名称&gt;=&lt;值&gt;</span><br><span class="line">                  设置系统属性</span><br><span class="line">    <span class="literal">-verbose</span>:[<span class="type">class</span>|<span class="type">module</span>|<span class="type">gc</span>|<span class="type">jni</span>]</span><br><span class="line">                  为给定子系统启用详细输出</span><br><span class="line">    <span class="literal">-version</span>      将产品版本输出到错误流并退出</span><br><span class="line">    <span class="literal">--version</span>     将产品版本输出到输出流并退出</span><br><span class="line">    <span class="literal">-showversion</span>  将产品版本输出到错误流并继续</span><br><span class="line">    <span class="literal">--show-version</span></span><br><span class="line">                  将产品版本输出到输出流并继续</span><br><span class="line">    <span class="literal">--show-module-resolution</span></span><br><span class="line">                  在启动过程中显示模块解析输出</span><br><span class="line">    -? <span class="literal">-h</span> <span class="literal">-help</span></span><br><span class="line">                  将此帮助消息输出到错误流</span><br><span class="line">    <span class="literal">--help</span>        将此帮助消息输出到输出流</span><br><span class="line">    <span class="literal">-X</span>            将额外选项的帮助输出到错误流</span><br><span class="line">    <span class="literal">--help-extra</span>  将额外选项的帮助输出到输出流</span><br><span class="line">    <span class="literal">-ea</span>[:&lt;程序包名称&gt;<span class="type">...</span>|:&lt;类名&gt;]</span><br><span class="line">    <span class="literal">-enableassertions</span>[:&lt;程序包名称&gt;<span class="type">...</span>|:&lt;类名&gt;]</span><br><span class="line">                  按指定的粒度启用断言</span><br><span class="line">    <span class="literal">-da</span>[:&lt;程序包名称&gt;<span class="type">...</span>|:&lt;类名&gt;]</span><br><span class="line">    <span class="literal">-disableassertions</span>[:&lt;程序包名称&gt;<span class="type">...</span>|:&lt;类名&gt;]</span><br><span class="line">                  按指定的粒度禁用断言</span><br><span class="line">    <span class="literal">-esa</span> | <span class="literal">-enablesystemassertions</span></span><br><span class="line">                  启用系统断言</span><br><span class="line">    <span class="literal">-dsa</span> | <span class="literal">-disablesystemassertions</span></span><br><span class="line">                  禁用系统断言</span><br><span class="line">    <span class="literal">-agentlib</span>:&lt;库名&gt;[=&lt;选项&gt;]</span><br><span class="line">                  加载本机代理库 &lt;库名&gt;, 例如 <span class="literal">-agentlib</span>:jdwp</span><br><span class="line">                  另请参阅 <span class="literal">-agentlib</span>:jdwp=help</span><br><span class="line">    <span class="literal">-agentpath</span>:&lt;路径名&gt;[=&lt;选项&gt;]</span><br><span class="line">                  按完整路径名加载本机代理库</span><br><span class="line">    <span class="literal">-javaagent</span>:&lt;jar 路径&gt;[=&lt;选项&gt;]</span><br><span class="line">                  加载 Java 编程语言代理, 请参阅 java.lang.instrument</span><br><span class="line">    <span class="literal">-splash</span>:&lt;图像路径&gt;</span><br><span class="line">                  使用指定的图像显示启动屏幕</span><br><span class="line">                  自动支持和使用 HiDPI 缩放图像</span><br><span class="line">                  (如果可用)。应始终将未缩放的图像文件名 (例如, image.ext)</span><br><span class="line">                  作为参数传递给 <span class="literal">-splash</span> 选项。</span><br><span class="line">                  将自动选取提供的最合适的缩放</span><br><span class="line">                  图像。</span><br><span class="line">                  有关详细信息, 请参阅 SplashScreen API 文档</span><br><span class="line">    @argument 文件</span><br><span class="line">                  一个或多个包含选项的参数文件</span><br><span class="line">    <span class="literal">--disable-</span>@files</span><br><span class="line">                  阻止进一步扩展参数文件</span><br><span class="line">    <span class="literal">--enable-preview</span></span><br><span class="line">                  允许类依赖于此发行版的预览功能</span><br><span class="line">要为长选项指定参数, 可以使用 <span class="literal">--</span>&lt;名称&gt;=&lt;值&gt; 或</span><br><span class="line"><span class="literal">--</span>&lt;名称&gt; &lt;值&gt;。</span><br><span class="line"></span><br><span class="line"><span class="built_in">PS</span> D:\Temp\Java&gt;</span><br></pre></td></tr></table></figure>

<p>目前只找到 Oracle 官网有此文档，其他发布版本，不一定有。</p>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>MySql在Docker里时间晚8小时</title>
    <url>/2024/08/03/MySql%E5%9C%A8Docker%E9%87%8C%E6%97%B6%E9%97%B4%E6%99%9A8%E5%B0%8F%E6%97%B6/</url>
    <content><![CDATA[<p><code>/etc/localtime</code>是用来描述本机时间<br><code>/etc/timezone</code>是用来描述本机所属的时区</p>
<p>在Linux中，有一些程序会自己计算时间，不会直接采用带有时区的本机时间格式，会根据UTC时间和本机所属的时区等计算出当前的时间。</p>
<p>比如JDK应用，时区为“Etc&#x2F;UTC”，本机时间改为北京时间，通过Java代码中<code>new</code> 出来的时间还是 <code>UTC</code> 时间，所以必须得修正本机的时区。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it containerID /bin/bash</span><br></pre></td></tr></table></figure>

<p>以下命令在容器中运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"><span class="built_in">touch</span> clock</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&#x27;ZONE=&quot;Asia/Shanghai&quot; \nUTC=fasle\nARC=false&#x27;</span> &gt; clock</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring基本流程</title>
    <url>/2024/08/03/Spring%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<h3 id="什么事-Spring-容器"><a href="#什么事-Spring-容器" class="headerlink" title="什么事 Spring 容器"></a>什么事 Spring 容器</h3><p>管理 Bean 对象，通过依赖注入组织 Bean 之间的关系，从而降低业务对象之间的耦合性。</p>
<h3 id="ApplicationContext-和-BeanFactory-区别"><a href="#ApplicationContext-和-BeanFactory-区别" class="headerlink" title="ApplicationContext 和 BeanFactory 区别"></a>ApplicationContext 和 BeanFactory 区别</h3><p>ApplicationContext 的定义了所有 Bean 加载的全部过程；<br>BeanFactory 只是定义了获取和创建 Bean 的方法</p>
<h3 id="SpringBoot-Bean-加载流程"><a href="#SpringBoot-Bean-加载流程" class="headerlink" title="SpringBoot Bean 加载流程"></a>SpringBoot Bean 加载流程</h3><p><img src="/2024/08/03/Spring%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B/SpringBoot%E5%AE%B9%E5%99%A8%E5%8A%A0%E8%BD%BD%E6%B5%81%E7%A8%8B.svg" alt="测试"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 读取配置类</span></span><br><span class="line"><span class="type">DefaultListableBeanFactory</span> <span class="variable">beanFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultListableBeanFactory</span>();</span><br><span class="line"><span class="type">AnnotatedBeanDefinitionReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotatedBeanDefinitionReader</span>(beanFactory);</span><br><span class="line">reader.register(SpringIocFlowApplication.class);</span><br><span class="line"></span><br><span class="line"><span class="comment">//解析配置类</span></span><br><span class="line">String[] beanDefinitionNames = beanFactory.getBeanDefinitionNames();</span><br><span class="line">System.out.println(String.join(System.lineSeparator(), beanDefinitionNames));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 循环创建所有的Bean</span></span><br><span class="line"><span class="comment">// beanFactory.preInstantiateSingletons();</span></span><br></pre></td></tr></table></figure>


<p>构造函数发生循环依赖时，可以家<code>@Lazy</code>注解解决。</p>
<p>AOP的实现时基于动态代理</p>
<ul>
<li>JDK （有接口，反射调用目标方法）</li>
<li>Cglib （没有接口，子类调用父类）</li>
</ul>
<p>JDK 1.8以前，JDK较慢；之后，没有多大区别</p>
<p>事务失效</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> &#123;</span><br><span class="line">        jdbcTemplate.execute(<span class="string">&quot;INSERT INTO test2.customers\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;( first_name, last_name)\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;VALUES(&#x27;a&#x27;, &#x27;aa&#x27;);&quot;</span>);</span><br><span class="line"></span><br><span class="line">        test2();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional(propagation = Propagation.NEVER)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span> &#123;</span><br><span class="line">        jdbcTemplate.execute(<span class="string">&quot;INSERT INTO test2.customers\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;( first_name, last_name)\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;VALUES( &#x27;b&#x27;, &#x27;bb&#x27;);&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>@Transactional</code> 本质也是AOP，通过动态代理实现。在同一个类里调用<code>test2</code>,没有经过代理类。<br>在项目支持循环依赖的情况下(最好不要),可以注入<code>userService</code>自己，调用<code>userService.test2()</code>来让事务传播生效.</p>
<p>Spring 事务传播机制可使用 <code>@Transactional(propagation=Propagation.REQUIRED)</code> 来定义，Spring 事务传播机制的级别包含以下 7 种：</p>
<table>
<thead>
<tr>
<th>事务传播行为类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Propagation.REQUIRED</td>
<td>默认的事务传播级别，它表示如果当前存在事务，则加入该事务；如果当前没有事务，则创建一个新的事务。</td>
</tr>
<tr>
<td>Propagation.SUPPORTS</td>
<td>如果当前存在事务，则加入该事务；如果当前没有事务，则以非事务的方式继续运行。</td>
</tr>
<tr>
<td>Propagation.MANDATORY</td>
<td>（mandatory：强制性）如果当前存在事务，则加入该事务；如果当前没有事务，则抛出异常。</td>
</tr>
<tr>
<td>Propagation.REQUIRES_NEW</td>
<td>表示创建一个新的事务，如果当前存在事务，则把当前事务挂起。也就是说不管外部方法是否开启事务，Propagation.REQUIRES_NEW 修饰的内部方法会新开启自己的事务，且开启的事务相互独立，互不干扰。</td>
</tr>
<tr>
<td>Propagation.NOT_SUPPORTED</td>
<td>以非事务方式运行，如果当前存在事务，则把当前事务挂起。</td>
</tr>
<tr>
<td>Propagation.NEVER</td>
<td>以非事务方式运行，如果当前存在事务，则抛出异常。</td>
</tr>
<tr>
<td>Propagation.NESTED</td>
<td>如果当前存在事务，则创建一个事务作为当前事务的嵌套事务来运行；如果当前没有事务，则该取值等价于 PROPAGATION_REQUIRED。</td>
</tr>
</tbody></table>
<p>注意：<code>SpringBootTest</code> 里面的 <code>@Test</code> 方法添加 <code>@Transactional</code> 执行不符合预期</p>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Spring</tag>
        <tag>Sql</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx 403 排查及相关知识链接</title>
    <url>/2024/08/01/nginx-403-%E6%8E%92%E6%9F%A5%E5%8F%8A%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E9%93%BE%E6%8E%A5/</url>
    <content><![CDATA[<ol>
<li>权限链路检查<ul>
<li>默认用户<code>www-data</code>是否有修改，设置的用户是否有对应目录的相应权限。 </li>
<li>相关用户（或程序）是否也有对应目录的权限</li>
</ul>
</li>
<li>是否有 <code>index</code>文件</li>
<li><code>SELinux</code>状态检查</li>
</ol>
<p>参考:</p>
<ul>
<li><a href="https://github.com/dunwu/nginx-tutorial">Nginx 极简教程</a></li>
<li><a href="https://www.cnblogs.com/zakun/p/nginx-vhost.html">nginx 单域名多站点配置</a></li>
<li><a href="https://nginx.org/">nginx官网</a></li>
<li><a href="https://www.cnblogs.com/cheyaoyao/p/17836522.html">使用 Hexo 搭建个人博客并部署到云服务器</a></li>
</ul>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>关于 Gradle 在 Powershell终端 乱码的问题</title>
    <url>/2024/08/02/%E5%85%B3%E4%BA%8E-Gradle-%E5%9C%A8-Powershell%E7%BB%88%E7%AB%AF-%E4%B9%B1%E7%A0%81%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="默认情况下，-在PowerShell-执行-gradle-build-如果代码有中文显示，会出现乱码"><a href="#默认情况下，-在PowerShell-执行-gradle-build-如果代码有中文显示，会出现乱码" class="headerlink" title="默认情况下， 在PowerShell 执行 gradle build,如果代码有中文显示，会出现乱码"></a>默认情况下， 在<code>PowerShell</code> 执行 <code>gradle build</code>,如果代码有中文显示，会出现乱码</h3><p>在没有特别设置的情况下，不论是 <code>IntelliJ IDEA</code>还是 <code>gradle init</code>创建项目，其代码文件默认都是<code>UTF-8</code>编码。<br>而 Windows 系统，则是 <code>GBK</code>、<code>GB18030</code>或者更早的<code>GB2312</code>。<br>两者是不一致的。</p>
<p>解决方法：</p>
<ol>
<li><p>修改系统的编码为<code>UTF-8</code>,<code>Windows 10</code>和<code>Windows 11</code>支持。<br>此方法最为彻底，方便！但影响不支持<code>UTF-8</code>的程序;<br>修改路径: <code>设置</code>-&gt;<code>时间和语言</code>-&gt;<code>管理语言设置</code>-&gt;<code>非 Unicode程序的语言</code>-&gt;<code>更改系统区域设置</code>-&gt;勾选<code>Beta版: 使用Unicode UTF-8 提供全球语言支持</code>-&gt;<code>确定</code></p>
</li>
<li><p>调整<code>gradle</code>命令执行的<code>JVM</code>环境</p>
<ol>
<li><p><code>IntelliJ IDEA</code>通过<code>Spring Initializr</code>创建的<code>Gradle</code>管理项目</p>
<ol>
<li>设置<code>Gradle</code>配置文件<code>~/.gradle/gradle.properties</code></li>
</ol>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">org.gradle.jvmargs=-Dfile.encoding=GBK</span><br></pre></td></tr></table></figure>

<ol>
<li>设置环境变量</li>
</ol>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GRADLE_OPTS=-Dfile.encoding=GBK</span><br></pre></td></tr></table></figure>
</li>
<li><p>通过<code>gradle init</code>创建的项目和<code>IntelliJ IDEA</code>通过<code>Java</code>模版创建的项目</p>
<ol>
<li>设置<code>Gradle</code>配置文件<code>~/.gradle/gradle.properties</code></li>
</ol>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">org.gradle.jvmargs=-Dfile.encoding=GB2312</span><br></pre></td></tr></table></figure>

<ol>
<li>设置环境变量</li>
</ol>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GRADLE_OPTS=-Dfile.encoding=GBK</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
</ol>
<p>其他说明:</p>
<ol>
<li><code>IntelliJ IDEA</code> 运行 <code>gradle</code>,读取的是<code>~/.gradle/gradle.properties</code>的设置，环境变量<code>GRADLE_OPTS</code>无效</li>
<li>设置环境变量后，如果使用 <code>IntelliJ IDEA</code> 内建的PowerShell，需要重启 <code>IntelliJ IDEA</code></li>
<li>设置环境变量<code>$PSDefaultParameterValues</code> 和 <code>$OutputEncoding</code>为<code>UTF-8</code>，无效;</li>
<li>运行<code>chcp 65001</code>, 只能改变 <code>JVM</code> 环境的 <code>stdout</code>设置，<code>native.encoding</code> 仍然为 <code>GBK</code>,无效。</li>
<li><code>~/.gradle/gradle.properties</code>中设置<code>org.gradle.jvmargs=-Dfile.encoding=GBK</code>， 影响<code>IntelliJ IDEA</code>和 <code>PowerShell</code>。如果在 RootProject 下设置 <code>gradle.properties</code> 设置，<code>IntelliJ IDEA</code>正常，但 PowerShell不正常</li>
<li><code>GRADLE_OPTS</code> 只影响 <code>PowerShell</code></li>
<li><a href="https://docs.gradle.org/current/userguide/common_caching_problems.html"><code>Gradle</code>不跟踪系统编码和环境变量的变化。</a></li>
</ol>
<p><code>JVM</code>一旦运行，不可修改的属性:</p>
<ol>
<li><code>file.encoding</code></li>
<li><code>user.language</code></li>
<li><code>user.country</code></li>
<li><code>user.variant</code></li>
<li><code>java.io.tmpdir</code></li>
<li><code>javax.net.ssl.keyStore</code></li>
<li><code>javax.net.ssl.keyStorePassword</code></li>
<li><code>javax.net.ssl.keyStoreType</code></li>
<li><code>javax.net.ssl.trustStore</code></li>
<li><code>javax.net.ssl.trustStorePassword</code></li>
<li><code>javax.net.ssl.trustStoreType</code></li>
<li><code>com.sun.management.jmxremote</code></li>
</ol>
<p>在启动控制的属性也不可修改:</p>
<ol>
<li><code>-Xmx</code></li>
<li><code>-Xms</code></li>
<li><code>-Xbootclasspath</code></li>
<li><code>-ea</code></li>
</ol>
<p><span id="ps1">PowerShell配置文件</span></p>
<p>PowerShell 控制台支持以下基本配置文件。 这些文件路径是默认位置。</p>
<ol>
<li>所有用户，所有主机<ul>
<li>Windows - $PSHOME\Profile.ps1。</li>
<li>Linux - &#x2F;opt&#x2F;microsoft&#x2F;powershell&#x2F;7&#x2F;profile.ps1</li>
<li>macOS - &#x2F;usr&#x2F;local&#x2F;microsoft&#x2F;powershell&#x2F;7&#x2F;profile.ps1</li>
</ul>
</li>
<li>所有用户，当前主机<ul>
<li>Windows - $PSHOME\Microsoft.PowerShell_profile.ps1。</li>
<li>Linux - &#x2F;opt&#x2F;microsoft&#x2F;powershell&#x2F;7&#x2F;Microsoft.PowerShell_profile.ps1</li>
<li>macOS - &#x2F;usr&#x2F;local&#x2F;microsoft&#x2F;powershell&#x2F;7&#x2F;Microsoft.PowerShell_profile.ps1</li>
</ul>
</li>
<li>当前用户，所有主机<ul>
<li>Windows - $HOME\Documents\PowerShell\Profile.ps1。</li>
<li>Linux - ~&#x2F;.config&#x2F;powershell&#x2F;profile.ps1</li>
<li>macOS - ~&#x2F;.config&#x2F;powershell&#x2F;profile.ps1</li>
</ul>
</li>
<li>当前用户，当前主机<ul>
<li>Windows - $HOME\Documents\PowerShell\Microsoft.PowerShell_profile.ps1。</li>
<li>Linux - ~&#x2F;.config&#x2F;powershell&#x2F;Microsoft.PowerShell_profile.ps1</li>
<li>macOS - ~&#x2F;.config&#x2F;powershell&#x2F;Microsoft.PowerShell_profile.ps1</li>
</ul>
</li>
</ol>
<p>资料:</p>
<ol>
<li><a href="https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_character_encoding?view=powershell-7.4#%E6%9B%B4%E6%94%B9%E9%BB%98%E8%AE%A4%E7%BC%96%E7%A0%81">更改默认编码</a></li>
<li><a href="https://learn.microsoft.com/zh-tw/powershell/module/microsoft.powershell.core/about/about_profiles?view=powershell-7.4">PowerShell Profiles</a></li>
<li><a href="https://www.codenong.com/cs106124420/">深入浅出了解Java程序中的乱码</a></li>
</ol>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>Java Gradle PowerShell</tag>
      </tags>
  </entry>
</search>
